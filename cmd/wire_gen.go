// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"risk-management/internal/adapter/kafka/in"
	"risk-management/internal/adapter/kafka/out"
	"risk-management/internal/domain/application"
	"risk-management/internal/infra/kafka"
	"risk-management/internal/infra/logger"
)

// Injectors from wire.go:

func buildAppContainer() (*Manager, error) {
	zapLogger := logger.NewLogger()
	saramaConfig := kafka.NewSaramaConfig()
	cloudEventsSender, err := kafka.NewCloudEventsKafkaSender(saramaConfig)
	if err != nil {
		return nil, err
	}
	kafkaRiskAnalysisRepository := out.NewKafkaRiskAnalysisRepository(cloudEventsSender, zapLogger)
	riskAnalysisService := application.NewRiskAnalysisService(kafkaRiskAnalysisRepository, zapLogger)
	fraudScoringReceiver := in.NewFraudScoringReceiver(zapLogger, riskAnalysisService)
	cloudEventsReceiver, err := kafka.NewCloudEventsKafkaConsumer(saramaConfig)
	if err != nil {
		return nil, err
	}
	manager := NewManager(fraudScoringReceiver, cloudEventsReceiver)
	return manager, nil
}
